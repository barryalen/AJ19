2020-07-06 21:23:57 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:23:57 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${amount}=3000, ${register_mb}=15102611740, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740}
2020-07-06 21:23:58 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:23:58 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:23:58 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:23:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:23:59 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:23:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:23:59 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:23:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:23:59 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:23:59 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:23:59 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:23:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:00 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:24:00 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:24:00 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:24:00 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"123456"}', contentType='json', expectResult='{"$.username":"test0000001"}', sql='null'}
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:00 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:24:00 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test0000001
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:24:00 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:24:00 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:00 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:00 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:24:00 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:00 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:00 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:24:00 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:24:00 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:00 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:01 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:01 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:24:01 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:01 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:01 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:24:01 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:01 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:01 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:24:01 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:24:01 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:24:01 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:24:01 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:24:01 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:25:20 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:25:20 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${amount}=3000, ${register_mb}=15102611740, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740}
2020-07-06 21:25:22 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:22 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:25:22 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:25:22 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:25:22 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:25:22 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:25:22 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:22 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:25:22 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:25:22 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:25:22 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:25:22 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:25:22 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:22 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:23 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:25:23 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:25:23 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:25:23 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:23 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:25:23 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:25:23 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:25:23 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test20200706001","password":"123456"}', contentType='json', expectResult='{"$.username":"test0000001"}', sql='null'}
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:23 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:25:23 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test0000001
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:25:23 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:25:23 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:23 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:23 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:25:23 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:23 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:23 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:25:23 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:25:23 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:23 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:24 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:24 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:25:24 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:24 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:24 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:25:24 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:24 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:24 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:25:24 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:25:24 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:25:24 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:25:24 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:25:24 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:28:45 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:28:45 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${amount}=3000, ${register_mb}=15102611740, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740}
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:47 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:47 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:47 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"id":575,"username":"poiuytr","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1NzUsInVzZXJuYW1lIjoicG9pdXl0ciIsImV4cCI6MTU5NDEyODUyNiwiZW1haWwiOiIifQ.HdMWKD7djjPGN29FCQmmZRz450OgS4TL02PM7kSuE28"}
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 21:28:47 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===poiuytr
2020-07-06 21:28:47 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:47 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test20200706001","password":"111111","email":"20200705002@qq.com","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"test0005"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:48 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"id":576,"username":"test20200706001","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1NzYsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAxIiwiZXhwIjoxNTk0MTI4NTI3LCJlbWFpbCI6IjIwMjAwNzA1MDAyQHFxLmNvbSJ9.tFAe9fl_wat7zKe_9oSo3aQ5l-9jdz3ZfeMj787h8O0"}
2020-07-06 21:28:48 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test0005
2020-07-06 21:28:48 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706001
2020-07-06 21:28:48 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:48 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:49 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:28:49 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:49 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:28:49 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:49 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:28:49 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:49 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:28:49 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test20200706001","password":"111111"}', contentType='json', expectResult='{"$.username":"test0000001"}', sql='null'}
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:49 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1NzYsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAxIiwiZXhwIjoxNTk0MTI4NTI4LCJlbWFpbCI6IjIwMjAwNzA1MDAyQHFxLmNvbSJ9.j3TER2XqIDsR3xEI3Zftu9Qsh9GZxGD9Q9-15-ynSqw","user_id":576,"username":"test20200706001"}
2020-07-06 21:28:49 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test0000001
2020-07-06 21:28:49 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706001
2020-07-06 21:28:49 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1NzYsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAxIiwiZXhwIjoxNTk0MTI4NTI4LCJlbWFpbCI6IjIwMjAwNzA1MDAyQHFxLmNvbSJ9.j3TER2XqIDsR3xEI3Zftu9Qsh9GZxGD9Q9-15-ynSqw
2020-07-06 21:28:49 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:49 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 21:28:50 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":83,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":9,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:28:50 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:28:50 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:28:50 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":83,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":9,"current_page_num":1}
2020-07-06 21:28:50 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:28:50 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 21:34:29 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:34:29 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${username}=test20200706002, ${register_mb}=15102611740, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740}
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:31 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:31 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:31 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"]}
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:31 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:31 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 21:34:31 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:34:31 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"email":["此邮箱已注册"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"${username}","password":"111111","email":"20200705002@qq.com","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"email":["此邮箱已注册"]}
2020-07-06 21:34:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:34:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:34:32 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:34:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:34:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:34:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:34:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:34:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:34:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:34:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:34:34 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===Error decoding signature.
2020-07-06 21:34:34 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:34:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:34:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"detail":"Error decoding signature."}
2020-07-06 21:34:34 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:34:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:36:05 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:36:05 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${username}=test20200706002, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740, ${email}=test20200706002@qq.com}
2020-07-06 21:36:06 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:36:06 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:06 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:36:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:36:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"email":["此邮箱已注册"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:36:08 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:36:08 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"${username}","password":"111111","email":"${email}","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"id":581,"username":"test20200706002","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTI4OTY3LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.P7KqzGe6noHqSJdynvM3ccJ1rpdDfGKHZC2AhqdsEVA"}
2020-07-06 21:36:08 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:36:08 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:36:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:36:08 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:36:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:36:09 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:36:09 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:36:09 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:36:09 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:36:09 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTI4OTY4LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.aJyNvMyPUaaDxGcUWAQa_jJDsQoiiLEYFlKAhcSqmPE","user_id":581,"username":"test20200706002"}
2020-07-06 21:36:09 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 21:36:09 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTI4OTY4LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.aJyNvMyPUaaDxGcUWAQa_jJDsQoiiLEYFlKAhcSqmPE
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:36:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:36:09 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:36:10 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 21:36:10 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:36:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":92,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":10,"current_page_num":1}
2020-07-06 21:36:10 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:36:10 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:36:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:36:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:36:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:208) - [ INFO ]----==========响应体=={"count":92,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":10,"current_page_num":1}
2020-07-06 21:36:10 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:36:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 21:44:30 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 21:44:30 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${username}=test20200706002, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740, ${email}=test20200706002@qq.com}
2020-07-06 21:44:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:44:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:44:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:44:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:32 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:44:32 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:32 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:44:32 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:44:32 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:32 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"email":["此邮箱已注册"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"${username}","password":"111111","email":"${email}","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["此邮箱已注册"]}
2020-07-06 21:44:33 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 21:44:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 21:44:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:44:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:44:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:33 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 21:44:33 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 21:44:33 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 21:44:33 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:44:33 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:33 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:44:34 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:44:34 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:44:34 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 21:44:34 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 21:44:34 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 21:44:34 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTI5NDczLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.ZuBqfmqtdkOFdQQQbnjst78niV7VbqghS-aJZ_6xx_o","user_id":581,"username":"test20200706002"}
2020-07-06 21:44:34 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 21:44:34 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTI5NDczLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.ZuBqfmqtdkOFdQQQbnjst78niV7VbqghS-aJZ_6xx_o
2020-07-06 21:44:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"","size":"","ordering":""}
2020-07-06 21:44:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:44:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:44:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"999","size":"","ordering":""}
2020-07-06 21:44:34 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:44:34 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:44:34 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:44:34 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:34 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 21:44:34 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"","size":"9999","ordering":""}
2020-07-06 21:44:35 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:44:35 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:44:35 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"2","size":"1","ordering":""}
2020-07-06 21:44:35 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":null,"results":[{"id":1,"name":"登录接口配置_自动化测试平台项目","interface":{"name":"登录接口_自动化测试平台项目","project":"自动化测试平台项目"},"author":"柠檬小姐姐"},{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":1,"current_page_num":1}
2020-07-06 21:44:35 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 21:44:35 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"","size":"","ordering":""}
2020-07-06 21:44:35 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":95,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":10,"current_page_num":1}
2020-07-06 21:44:35 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===null
2020-07-06 21:44:35 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 21:44:35 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:134) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 21:44:35 method: utils.HttpUtils.get(HttpUtils.java:135) - [ INFO ]----====getHttp=params=={"page":"1","size":"1","ordering":""}
2020-07-06 21:44:35 method: utils.HttpUtils.getResponseBody(HttpUtils.java:210) - [ INFO ]----==========响应体=={"count":95,"next":"http://api.keyou.site:8000/projects/?page=2","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1},{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1},{"id":3,"create_time":"2019-11-06 14:24:43","name":"西天取经项目","leader":"唐僧","tester":"猪八戒","programmer":"孙悟空","publish_app":"修成正果应用","desc":"妖怪哪里跑?","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":4,"create_time":"2019-11-06 14:27:33","name":"红楼梦项目","leader":"曹雪芹","tester":"贾宝玉","programmer":"王熙凤","publish_app":"红楼梦研究应用","desc":"如花美眷，怎敌似水流年。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":5,"create_time":"2019-11-06 14:28:54","name":"水浒传项目","leader":"施耐庵","tester":"宋江","programmer":"武松","publish_app":"水浒传研究应用","desc":"有缘千里来相会，无缘对面不相逢。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":6,"create_time":"2019-11-06 14:30:42","name":"三国演义项目","leader":"吴承恩","tester":"刘备","programmer":"关羽","publish_app":"三国演义应用","desc":"念刘备、关羽、张飞，虽然异姓，既结为兄弟，则同心协力，救困扶危；上报国家，下安黎庶。不求同年同月同日生，只愿同年同月同日死。皇天后土，实鉴此心，背义忘恩，天人共戮！","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":7,"create_time":"2019-11-06 14:33:38","name":"金瓶梅项目","leader":"兰陵笑笑生","tester":"潘金莲","programmer":"西门庆","publish_app":"金瓶梅研究项目","desc":"富贵必因奸巧得，功名全仗邓通成。","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":8,"create_time":"2019-11-06 14:41:12","name":"项目1","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":9,"create_time":"2019-11-06 14:42:00","name":"项目2","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0},{"id":10,"create_time":"2019-11-06 14:42:19","name":"项目3","leader":"某人","tester":"某人","programmer":"某人","publish_app":"某应用","desc":"某某描述","interfaces":0,"testsuits":0,"testcases":0,"configures":0}],"total_pages":10,"current_page_num":1}
2020-07-06 21:44:35 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 21:44:35 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 22:08:07 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:08:07 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${username}=test20200706002, ${login_pwd}=12345678, ${register_pwd}=12345678, ${login_mb}=15102611740, ${email}=test20200706002@qq.com}
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"]}
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:08:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:08:09 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"email":["此邮箱已注册"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"${username}","password":"111111","email":"${email}","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["此邮箱已注册"]}
2020-07-06 22:08:10 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:08:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 22:08:10 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:08:11 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:08:11 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:08:11 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:08:11 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMwODkwLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.CdqVGAn8XjQb3zFpq5tvzAbTWQkkHYRCLjgkQQoej34","user_id":581,"username":"test20200706002"}
2020-07-06 22:08:11 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:08:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:08:11 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMwODkwLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.CdqVGAn8XjQb3zFpq5tvzAbTWQkkHYRCLjgkQQoej34
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=999
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=9999&ordering=&page=
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=1&ordering=&page=2
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":"http://api.keyou.site:8000/configures/?ordering=&size=1","results":[{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":2,"current_page_num":2}
2020-07-06 22:08:12 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===2
2020-07-06 22:08:12 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:08:12 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:08:12 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"1","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:08:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 22:08:12 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=1&ordering=&page=1
2020-07-06 22:08:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"count":95,"next":"http://api.keyou.site:8000/projects/?ordering=&page=2&size=1","previous":null,"results":[{"id":1,"create_time":"2019-11-06 14:21:19","name":"自动化测试平台项目","leader":"可可","tester":"优优","programmer":"可优","publish_app":"自动化测试平台应用","desc":"该平台当前主要用于接口自动化测试.","interfaces":3,"testsuits":1,"testcases":13,"configures":1}],"total_pages":95,"current_page_num":1}
2020-07-06 22:08:12 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 22:08:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===1
2020-07-06 22:30:05 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:30:05 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:30:06 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:06 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:06 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr1","password":"","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='邮箱为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuytr","password":"123456","email":"","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"已存在一位使用该名字的用户"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===已存在一位使用该名字的用户
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='确认密码为空，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuyrte1","password":"123456","email":"poiuytr@qq.com","password_confirm":""}', contentType='json', expectResult='{"$.password_confirm":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password_confirm":["该字段不能为空。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='用户名为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuy","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='用户名为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"poiuypoiuypoiuypoiuyp","password":"123456","email":"poiuytr@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.username":"仅允许6-20个字符的用户名"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["仅允许6-20个字符的用户名"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的用户名
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的用户名"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='邮箱不包含邮箱名，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0001","password":"123456","email":"@qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["请输入合法的邮件地址。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='邮箱不包含@，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0002","password":"123456","email":"qq.com","password_confirm":"123456"}', contentType='json', expectResult='{"$.email":"请输入合法的邮件地址"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:07 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"email":["请输入合法的邮件地址。"]}
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===请输入合法的邮件地址
2020-07-06 22:30:07 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请输入合法的邮件地址。"]
2020-07-06 22:30:07 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=9', desc='密码为5个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0003","password":"11","email":"20200705001@qq.com","password_confirm":"11"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:07 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 22:30:08 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 22:30:08 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=10', desc='密码为21个字符，其它字段不为空且符合要求', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"test0004","password":"111111111111111111111","email":"20200705002@qq.com","password_confirm":"111111111111111111111"}', contentType='json', expectResult='{"$.password":"仅允许6-20个字符的密码"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["仅允许6-20个字符的密码"],"email":["此邮箱已注册"],"password_confirm":["仅允许6~20个字符的确认密码"]}
2020-07-06 22:30:08 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===仅允许6-20个字符的密码
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["仅允许6-20个字符的密码"]
2020-07-06 22:30:08 method: cases.Register.testRegister(Register.java:26) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=11', desc='正向用例', name='register', type='post', url='http://api.keyou.site:8000/user/register/', params='{"username":"${username}","password":"111111","email":"${email}","password_confirm":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["已存在一位使用该名字的用户。"],"email":["此邮箱已注册"]}
2020-07-06 22:30:08 method: cases.Register.testRegister(Register.java:34) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["已存在一位使用该名字的用户。"]
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:30:08 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:30:08 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:08 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:30:08 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:30:08 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:30:08 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:08 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:30:09 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:30:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:30:09 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:30:09 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyMjA4LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.IrPKiH1G3YqVSkpCEKxDJ59x8jvWlmWN_BBpI0eCzz4","user_id":581,"username":"test20200706002"}
2020-07-06 22:30:09 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:30:09 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:30:09 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyMjA4LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.IrPKiH1G3YqVSkpCEKxDJ59x8jvWlmWN_BBpI0eCzz4
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809522
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594045809522
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809627
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940458095221594045809627
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809714
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404580952215940458096271594045809714
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809799
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594045809522159404580962715940458097141594045809799
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809881
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940458095221594045809627159404580971415940458097991594045809881
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:09 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045809965
2020-07-06 22:30:09 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404580952215940458096271594045809714159404580979915940458098811594045809965
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:09 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045810054
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594045809522159404580962715940458097141594045809799159404580988115940458099651594045810054
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594045810142
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940458095221594045809627159404580971415940458097991594045809881159404580996515940458100541594045810142
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='page值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"999","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=999
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='size值超限', name='configList', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"","size":"9999","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=9999&ordering=&page=
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='正向用例', name='login', type='get', url='http://api.keyou.site:8000/configures/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/configures/
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=1&ordering=&page=2
2020-07-06 22:30:10 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"count":2,"next":null,"previous":"http://api.keyou.site:8000/configures/?ordering=&size=1","results":[{"id":2,"name":"查询项目列表配置_前程贷项目","interface":{"name":"查看项目列表接口_前程贷P2P金融项目","project":"前程贷P2P金融项目"},"author":"柠檬小姐姐"}],"total_pages":2,"current_page_num":2}
2020-07-06 22:30:10 method: cases.ConfigList.testConfigList(ConfigList.java:33) - [ INFO ]----非数据库断言
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 22:30:10 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===2
2020-07-06 22:30:10 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='不输入参数', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"","size":"","ordering":""}', contentType='json', expectResult='{"$.detail":"无效页面"}', sql='null'}
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:10 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 22:30:10 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=&ordering=&page=
2020-07-06 22:30:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"detail":"无效页面。"}
2020-07-06 22:30:11 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 22:30:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无效页面
2020-07-06 22:30:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===无效页面。
2020-07-06 22:30:11 method: cases.ProjectList.testProjectList(ProjectList.java:21) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='正向用例', name='projects', type='get', url='http://api.keyou.site:8000/projects/', params='{"page":"2","size":"1","ordering":""}', contentType='json', expectResult='{"$.current_page_num":"2"}', sql='null'}
2020-07-06 22:30:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:30:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:30:11 method: utils.HttpUtils.get(HttpUtils.java:144) - [ INFO ]----====getHttp=url==http://api.keyou.site:8000/projects/
2020-07-06 22:30:11 method: utils.HttpUtils.get(HttpUtils.java:145) - [ INFO ]----====getHttp=params==size=1&ordering=&page=2
2020-07-06 22:30:11 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"count":95,"next":"http://api.keyou.site:8000/projects/?ordering=&page=3&size=1","previous":"http://api.keyou.site:8000/projects/?ordering=&size=1","results":[{"id":2,"create_time":"2019-11-06 14:22:54","name":"前程贷P2P金融项目","leader":"可优","tester":"小可可","programmer":"小优优","publish_app":"前程贷P2P金融应用","desc":"","interfaces":3,"testsuits":1,"testcases":1,"configures":1}],"total_pages":95,"current_page_num":2}
2020-07-06 22:30:11 method: cases.ProjectList.testProjectList(ProjectList.java:29) - [ INFO ]----非数据库断言
2020-07-06 22:30:11 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===2
2020-07-06 22:30:11 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===2
2020-07-06 22:33:56 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:33:56 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:33:57 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:57 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:57 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:57 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:33:58 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:58 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:33:58 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:58 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:33:58 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:58 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:33:58 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:58 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:58 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNDM3LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.rbGX0K6wA7PwL2w2K4TR8pzZMnod6nolPM4p5xM4xzo","user_id":581,"username":"test20200706002"}
2020-07-06 22:33:58 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:33:58 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:33:58 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNDM3LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.rbGX0K6wA7PwL2w2K4TR8pzZMnod6nolPM4p5xM4xzo
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039198
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046039198
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039310
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460391981594046039310
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039398
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404603919815940460393101594046039398
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039494
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046039198159404603931015940460393981594046039494
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039585
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460391981594046039310159404603939815940460394941594046039585
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039679
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404603919815940460393101594046039398159404603949415940460395851594046039679
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039777
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046039198159404603931015940460393981594046039494159404603958515940460396791594046039777
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046039885
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460391981594046039310159404603939815940460394941594046039585159404603967915940460397771594046039885
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:33:59 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:33:59 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:33:59 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
2020-07-06 22:34:18 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:34:18 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:34:19 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:19 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:19 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:20 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:34:20 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:20 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:34:20 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:20 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:34:20 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:20 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:34:20 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:20 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:20 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNDU5LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.idukvlPJg_DchUDOgt-1hOJbAwyVRK5d2I2OlBNMAtY","user_id":581,"username":"test20200706002"}
2020-07-06 22:34:20 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:34:20 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:34:20 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNDU5LCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.idukvlPJg_DchUDOgt-1hOJbAwyVRK5d2I2OlBNMAtY
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061171
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046061171
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061280
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460611711594046061280
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061366
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404606117115940460612801594046061366
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061460
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046061171159404606128015940460613661594046061460
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061554
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460611711594046061280159404606136615940460614601594046061554
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061646
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404606117115940460612801594046061366159404606146015940460615541594046061646
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061741
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046061171159404606128015940460613661594046061460159404606155415940460616461594046061741
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046061834
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940460611711594046061280159404606136615940460614601594046061554159404606164615940460617411594046061834
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:34:21 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:34:21 method: utils.HttpUtils.getResponseBody(HttpUtils.java:221) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:34:21 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
2020-07-06 22:39:42 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:39:42 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:39:43 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:43 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:43 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:44 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:39:44 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:44 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:39:44 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:44 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:39:44 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:44 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:39:44 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:44 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:44 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNzgzLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.SBNYCphHPf2qPBcjSk6g957-ZU-KD-_cIwAuX2TSWi8","user_id":581,"username":"test20200706002"}
2020-07-06 22:39:44 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:39:44 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:39:44 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyNzgzLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.SBNYCphHPf2qPBcjSk6g957-ZU-KD-_cIwAuX2TSWi8
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385084
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046385084
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385169
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940463850841594046385169
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385231
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404638508415940463851691594046385231
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385298
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046385084159404638516915940463852311594046385298
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385359
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940463850841594046385169159404638523115940463852981594046385359
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385425
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404638508415940463851691594046385231159404638529815940463853591594046385425
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385485
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046385084159404638516915940463852311594046385298159404638535915940463854251594046385485
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/user/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046385553
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940463850841594046385169159404638523115940463852981594046385359159404638542515940463854851594046385553
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:39:45 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:39:45 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体==<h1>Not Found</h1><p>The requested resource was not found on this server.</p>
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:39:45 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
2020-07-06 22:42:10 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:42:10 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:42:11 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:11 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:11 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:12 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:12 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:42:12 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:12 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:42:12 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:42:12 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:12 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:12 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyOTMxLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.yceXjq5gxA-aAu_ezT0YwqdXE5DlYJ4Ty8eiVfWwA3I","user_id":581,"username":"test20200706002"}
2020-07-06 22:42:13 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:42:13 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyOTMxLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.yceXjq5gxA-aAu_ezT0YwqdXE5DlYJ4Ty8eiVfWwA3I
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533156
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046533156
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"name":["该字段不能为空。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533208
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465331561594046533208
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["该字段不能为空。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533257
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404653315615940465332081594046533257
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"tester":["该字段不能为空。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533303
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046533156159404653320815940465332571594046533303
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"programmer":["该字段不能为空。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533350
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465331561594046533208159404653325715940465333031594046533350
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"publish_app":["该字段不能为空。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533396
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404653315615940465332081594046533257159404653330315940465333501594046533396
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"name":["具有 项目名称 的 项目信息 已存在。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===具有 项目名称 的 项目信息 已存在
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["具有 项目名称 的 项目信息 已存在。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533443
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046533156159404653320815940465332571594046533303159404653335015940465333961594046533443
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["请确保这个字段不能超过 50 个字符。"],"tester":["请确保这个字段不能超过 50 个字符。"],"programmer":["请确保这个字段不能超过 50 个字符。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===eric1594046533156159404653320815940465332571594046533303159404653335015940465333961594046533443
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请确保这个字段不能超过 50 个字符。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046533499
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465331561594046533208159404653325715940465333031594046533350159404653339615940465334431594046533499
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:13 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:13 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["请确保这个字段不能超过 50 个字符。"],"tester":["请确保这个字段不能超过 50 个字符。"],"programmer":["请确保这个字段不能超过 50 个字符。"],"publish_app":["请确保这个字段不能超过 100 个字符。"]}
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===eric15940465331561594046533208159404653325715940465333031594046533350159404653339615940465334431594046533499
2020-07-06 22:42:13 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请确保这个字段不能超过 50 个字符。"]
2020-07-06 22:42:13 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
2020-07-06 22:42:51 method: cases.Base.read(Base.java:108) - [ INFO ]----=======Base=====F:\AutoJava\java_atuo_study\exam/src/test/resources/params.properties
2020-07-06 22:42:51 method: cases.Base.read(Base.java:115) - [ INFO ]----=======Base====={${desc}=desc, ${tester}=barry, ${publish_app}=STG, ${email}=test20200706002@qq.com, ${username}=test20200706002, ${name}=projectName, ${leader}=eric, ${programmer}=jenson}
2020-07-06 22:42:52 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='用户名为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"","password":"123456"}', contentType='json', expectResult='{"$.username":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:52 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:52 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:53 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"username":["该字段不能为空。"]}
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:53 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='密码为空，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":""}', contentType='json', expectResult='{"$.password":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:53 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"password":["该字段不能为空。"]}
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:53 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='用户名为非注册过，其它字段不为空且符合要求', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test1","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:53 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:42:53 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='用户名为注册过，输入错误密码', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"test0000001","password":"111111111"}', contentType='json', expectResult='{"$.non_field_errors":"无法使用提供的认证信息登录"}', sql='null'}
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:53 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"non_field_errors":["无法使用提供的认证信息登录。"]}
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===无法使用提供的认证信息登录
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["无法使用提供的认证信息登录。"]
2020-07-06 22:42:53 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===null
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:28) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='正向用例', name='login', type='post', url='http://api.keyou.site:8000/user/login/', params='{"username":"${username}","password":"111111"}', contentType='json', expectResult='{"$.username":"${username}"}', sql='null'}
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:53 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:53 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyOTcyLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.FBdr8YRTMCyyETKnTyVLmja4WY3c-aBRgVuROZf5DuU","user_id":581,"username":"test20200706002"}
2020-07-06 22:42:53 method: cases.Login.testLogin(Login.java:37) - [ INFO ]----非数据库断言
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===test20200706002
2020-07-06 22:42:53 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===test20200706002
2020-07-06 22:42:53 method: cases.Login.addToken(Login.java:50) - [ INFO ]----========token===eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1ODEsInVzZXJuYW1lIjoidGVzdDIwMjAwNzA2MDAyIiwiZXhwIjoxNTk0MTMyOTcyLCJlbWFpbCI6InRlc3QyMDIwMDcwNjAwMkBxcS5jb20ifQ.FBdr8YRTMCyyETKnTyVLmja4WY3c-aBRgVuROZf5DuU
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=1', desc='项目名称为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.name":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574216
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046574216
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"name":["该字段不能为空。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=2', desc='项目负责人为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"","tester":"barry","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.leader":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574275
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465742161594046574275
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["该字段不能为空。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=3', desc='项目测试人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"","programmer":"jenson","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.tester":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574333
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404657421615940465742751594046574333
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"tester":["该字段不能为空。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=4', desc='开发人员为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"","publish_app":"STG","desc":""}', contentType='json', expectResult='{"$.programmer":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574389
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046574216159404657427515940465743331594046574389
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"programmer":["该字段不能为空。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=5', desc='发布应用为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"MDM","leader":"eric","tester":"barry","programmer":"jenson","publish_app":"","desc":""}', contentType='json', expectResult='{"$.publish_app":"该字段不能为空"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574449
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465742161594046574275159404657433315940465743891594046574449
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"publish_app":["该字段不能为空。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===该字段不能为空
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["该字段不能为空。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=6', desc='项目名称为已有名称，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"a","leader":"a","tester":"a","programmer":"a","publish_app":"a","desc":""}', contentType='json', expectResult='{"$.name":"具有 项目名称 的 项目信息 已存在"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574516
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName159404657421615940465742751594046574333159404657438915940465744491594046574516
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"name":["具有 项目名称 的 项目信息 已存在。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===具有 项目名称 的 项目信息 已存在
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["具有 项目名称 的 项目信息 已存在。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=7', desc='desc为空，其它字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"这是用来测试desc字段的"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"这是用来测试desc字段的"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574574
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName1594046574216159404657427515940465743331594046574389159404657444915940465745161594046574574
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["请确保这个字段不能超过 50 个字符。"],"tester":["请确保这个字段不能超过 50 个字符。"],"programmer":["请确保这个字段不能超过 50 个字符。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===eric1594046574216159404657427515940465743331594046574389159404657444915940465745161594046574574
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请确保这个字段不能超过 50 个字符。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=Y,caseId=8', desc='各字段不为空且符合要求', name='projectAdd', type='post', url='http://api.keyou.site:8000/projects/', params='{"name":"${name}","leader":"${leader}","tester":"${tester}","programmer":"${programmer}","publish_app":"${publish_app}","desc":"${desc}"}', contentType='json', expectResult='{"$.name":"${name}","$.leader":"${leader}","$.tester":"${tester}","$.programmer":"${programmer}","$.publish_app":"${publish_app}","$.desc":"${desc}"}', sql='null'}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:29) - [ INFO ]----=============timestamp===1594046574656
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:36) - [ INFO ]----projectName15940465742161594046574275159404657433315940465743891594046574449159404657451615940465745741594046574656
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:82) - [ INFO ]----============参数化处理开始==============
2020-07-06 22:42:54 method: cases.Base.parameterization(Base.java:100) - [ INFO ]----============参数化处理结束==============
2020-07-06 22:42:54 method: utils.HttpUtils.getResponseBody(HttpUtils.java:222) - [ INFO ]----==========响应体=={"leader":["请确保这个字段不能超过 50 个字符。"],"tester":["请确保这个字段不能超过 50 个字符。"],"programmer":["请确保这个字段不能超过 50 个字符。"],"publish_app":["请确保这个字段不能超过 100 个字符。"]}
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:42) - [ INFO ]----非数据库断言
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:59) - [ INFO ]----=======expectResult===eric15940465742161594046574275159404657433315940465743891594046574449159404657451615940465745741594046574656
2020-07-06 22:42:54 method: cases.Base.getExecuteFlag(Base.java:60) - [ INFO ]----=======actualResult===["请确保这个字段不能超过 50 个字符。"]
2020-07-06 22:42:54 method: cases.ProjectAdd.testProjectAdd(ProjectAdd.java:24) - [ INFO ]----CaseInfo{ifExecute=null,caseId=0', desc='null', name='null', type='null', url='null', params='null', contentType='null', expectResult='null', sql='null'}
